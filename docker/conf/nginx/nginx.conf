user  nginx;
#Defines which Linux system user will own and run the Nginx server

worker_processes  8;
#Referes to single threaded process. Generally set to be equal to the number of CPUs or cores.

error_log  /var/log/nginx/error.log warn;
#Specifies the file where server logs.

pid        /var/run/nginx.pid;
#nginx will write its master process ID(PID).
worker_rlimit_nofile 65536;

events {
    worker_connections  1024;
    multi_accept on;
    use epoll;
    # worker_processes and worker_connections allows you to calculate maxclients value:
    # max_clients = worker_processes * worker_connections
}


http {
    include       /etc/nginx/mime.types;
    # anything written in /opt/nginx/conf/mime.types is interpreted as if written inside the http { } block

    default_type  application/octet-stream;
    #

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    # If serving locally stored static files, sendfile is essential to speed up the server,
    # But if using as reverse proxy one can deactivate it

    #tcp_nopush     on;
    # works opposite to tcp_nodelay. Instead of optimizing delays, it optimizes the amount of data sent at once.

    #keepalive_timeout  0;
    keepalive_timeout  3000;
    keepalive_requests  3000;
    # timeout during which a keep-alive client connection will stay open.

    #gzip  on;

    include /etc/nginx/conf.d/*.conf
}